var c=Object.defineProperty;var u=(o,t,e)=>t in o?c(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e;var i=(o,t,e)=>u(o,typeof t!="symbol"?t+"":t,e);const d="";class h{constructor(){i(this,"token",null)}getToken(){return typeof window<"u"?localStorage.getItem("auth_token"):this.token}setToken(t){this.token=t,typeof window<"u"&&localStorage.setItem("auth_token",t)}clearToken(){this.token=null,typeof window<"u"&&localStorage.removeItem("auth_token")}async request(t,e={}){const s=this.getToken();console.log(`[API] ${e.method||"GET"} ${t}`,{hasToken:!!s,tokenPrefix:s?s.substring(0,20)+"...":"none"});const r={"Content-Type":"application/json",...e.headers};s?(r.Authorization=`Bearer ${s}`,console.log("[API] Authorization header added")):console.warn("[API] No token available!");const n=await fetch(`${d}${t}`,{...e,headers:r});if(!n.ok){const a=await n.json().catch(()=>({detail:"Request failed"}));throw n.status===401||n.status===403?new Error(`Authentication error: ${a.detail||"Not authenticated"}`):new Error(a.detail||`HTTP ${n.status}`)}return n.status===204?null:n.json()}async login(t,e){const s=await this.request("/api/auth/login",{method:"POST",body:JSON.stringify({username:t,password:e})});return this.setToken(s.access_token),s}async register(t,e){return this.request("/api/auth/register",{method:"POST",body:JSON.stringify({username:t,password:e})})}async getScripts(t){const e=t?`?status_filter=${t}`:"";return this.request(`/api/scripts/${e}`)}async getScript(t){return this.request(`/api/scripts/${t}/`)}async createScript(t){return this.request("/api/scripts/",{method:"POST",body:JSON.stringify(t)})}async updateScript(t,e){console.log("[API] updateScript - method: PUT, id:",t);const s=await this.request(`/api/scripts/${t}`,{method:"PUT",body:JSON.stringify(e)});return console.log("[API] updateScript success"),s}async deleteScript(t){const e=this.getToken(),s=await fetch(`/api/scripts/${t}`,{method:"DELETE",headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"}});if(!s.ok){const r=await s.json().catch(()=>({detail:"Delete failed"}));throw new Error(r.detail||`HTTP ${s.status}`)}return s.status===204?null:s.json()}async getVideos(t){const e=t?`?status_filter=${t}`:"";return this.request(`/api/videos/${e}`)}async getVideo(t){return this.request(`/api/videos/${t}/`)}async deleteVideo(t){const e=this.getToken(),s=await fetch(`/api/videos/${t}`,{method:"DELETE",headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"}});if(!s.ok){const r=await s.json().catch(()=>({detail:"Delete failed"}));throw new Error(r.detail||`HTTP ${s.status}`)}return s.status===204?null:s.json()}async generateScripts(t=1){return this.request("/api/generate/scripts",{method:"POST",body:JSON.stringify({count:t})})}async generatePostText(t){return this.request(`/api/generate/post-text/${t}`,{method:"POST"})}async generateVideo(t,e="center",s,r){return this.request("/api/generate/video",{method:"POST",body:JSON.stringify({script_id:t,text_position:e,custom_background:s,voice_id:r})})}async uploadBackground(t){const e=new FormData;e.append("file",t);const s=this.getToken(),r=await fetch(`${this.getApiUrl()}/api/upload/background`,{method:"POST",headers:{Authorization:`Bearer ${s}`},body:e});if(!r.ok){const n=await r.json().catch(()=>({detail:"Upload failed"}));throw new Error(n.detail||`HTTP ${r.status}`)}return r.json()}async listBackgrounds(){return this.request("/api/upload/backgrounds")}async cancelTask(t){console.log("[API] Cancelling task:",t);const e=await this.request(`/api/tasks/${t}/cancel`,{method:"POST"});return console.log("[API] Cancel response:",e),e}async getTaskStatus(t){return this.request(`/api/tasks/${t}/status`)}getApiUrl(){return""}async publishVideo(t,e){return this.request(`/api/publish/${t}`,{method:"POST",body:JSON.stringify({platforms:e})})}async getSettings(){return this.request("/api/settings/")}async updateSettings(t){return this.request("/api/settings/",{method:"PUT",body:JSON.stringify({settings:t})})}}const p=new h;export{p as a};
